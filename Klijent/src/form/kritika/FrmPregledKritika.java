/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.kritika;

import controller.Controller;
import domain.Delo;
import domain.Kritika;
import domain.role.UlogaKorisnika;
import form.FrmMode;
import form.kritika.model.TableModelKritika;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import session.Session;
import usecase.UseCase;

/**
 *
 * @author Phenom
 */
public class FrmPregledKritika extends javax.swing.JDialog {

    /**
     * Creates new form FrmPregledKritika
     */
    public FrmPregledKritika(java.awt.Frame parent, boolean modal, FrmMode mode) {
        super(parent, modal);
        initComponents();

        try {
            adjustForm(mode);
        } catch (Exception ex) {
            Logger.getLogger(FrmPregledKritika.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblKritike = new javax.swing.JTable();
        btnPrikazi = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblKritike.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblKritike);

        btnPrikazi.setText("Prikaži");
        btnPrikazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPrikazi)
                .addGap(18, 18, 18)
                .addComponent(btnObrisi)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrikazi)
                    .addComponent(btnObrisi))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrikaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziActionPerformed
        try {
            int rowIndex = tblKritike.getSelectedRow();
            
            if(rowIndex != -1) {
                TableModelKritika tmk = (TableModelKritika) tblKritike.getModel();
                Kritika kritika = tmk.get(rowIndex);
                
                Session.getInstance().getUseCaseParams().clear();
                Session.getInstance().getUseCaseParams().put("kritika", kritika);
                
                JDialog frmPrikaziKritiku = new FrmKritika(null, true);
                frmPrikaziKritiku.setVisible(true);
                
                if(Session.getInstance().getCurrentUseCase() == UseCase.UC_APPROVE_KRITIKA){
                    fixTable(Controller.getInstance().getKritikeZaOdobrenje());
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnPrikaziActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPrikazi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblKritike;
    // End of variables declaration//GEN-END:variables

    private void adjustForm(FrmMode mode) throws Exception {
        setLocationRelativeTo(null);
        
        switch (mode) {
            case VIEW:
                if (Session.getInstance().getKorisnik().getAdminRole() == UlogaKorisnika.ADMIN) {
                    btnObrisi.setVisible(true);
                } else {
                    btnObrisi.setVisible(false);
                }
                Session.getInstance().setCurrentUseCase(UseCase.UC_VIEW_KRITIKA);
                Delo delo = (Delo) Session.getInstance().getUseCaseParams().get("delo");
                fixTable(Controller.getInstance().getKritike(delo));
                
                setTitle("Pregled kritika");
                break;

            case EDIT:
                btnObrisi.setVisible(false);
                Session.getInstance().setCurrentUseCase(UseCase.UC_APPROVE_KRITIKA);
                fixTable(Controller.getInstance().getKritikeZaOdobrenje());
                setTitle("Pregled kritika za odobrenje");
                break;
        }
    }

    private void fixTable(List<Kritika> kritike) {
        TableModelKritika tmk = new TableModelKritika(kritike);
        tblKritike.setModel(tmk);
    }
}
