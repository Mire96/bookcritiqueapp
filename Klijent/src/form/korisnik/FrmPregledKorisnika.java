/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.korisnik;

import controller.Controller;
import domain.Korisnik;
import domain.role.UlogaKorisnika;
import form.FrmMode;
import form.korisnik.model.TableModelKorisnik;
import java.awt.HeadlessException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import session.Session;
import usecase.UseCase;

/**
 *
 * @author Phenom
 */
public class FrmPregledKorisnika extends javax.swing.JDialog {

    /**
     * Creates new form FrmPregledKorisnika
     */
    public FrmPregledKorisnika(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        adjustForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPretraga = new javax.swing.JTextField();
        btnPretraga = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        tblPretraga = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnPretraga.setText("Pretraži");
        btnPretraga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretragaActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        tblPretraga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrollPane.setViewportView(tblPretraga);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnIzmeni)
                        .addGap(28, 28, 28)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnObrisi)
                    .addComponent(btnPretraga))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPretraga))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzmeni)
                    .addComponent(btnObrisi))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPretragaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretragaActionPerformed
        
        try {
            String search = txtPretraga.getText().trim();
            List<Korisnik> result = Controller.getInstance().getAllUsers(search);
            fixTable(result);
            if(result.size() > 0) {
                if(Session.getInstance().getKorisnik().getAdminRole()== UlogaKorisnika.ADMIN)
                    btnIzmeni.setEnabled(true);
            } else{
                btnIzmeni.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Ni jedan korisnik sa tim kriterijumom pretrage nije pronadjen", "Pretraživanje korisnika", JOptionPane.INFORMATION_MESSAGE);
            }
            
        } catch (Exception ex) {
            Logger.getLogger(FrmPregledKorisnika.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPretragaActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        try {
            int rowIndex = tblPretraga.getSelectedRow();
            if (rowIndex != -1) {
                TableModelKorisnik tmk = (TableModelKorisnik) tblPretraga.getModel();
                Korisnik korisnik = tmk.get(rowIndex);
                
                if(Session.getInstance().getKorisnik().getAdminRole() != UlogaKorisnika.ADMIN){
                    JOptionPane.showMessageDialog(this, "Nemate pristup menjanju drugih korisnika", "Izmena korisnika", JOptionPane.ERROR_MESSAGE);
                }else{
                    Session.getInstance().setCurrentUseCase(UseCase.UC_EDIT_USER);
                    Session.getInstance().getUseCaseParams().clear();
                    Session.getInstance().getUseCaseParams().put("korisnik", korisnik);
                    
                    JDialog frmIzmenaKorisnika = new FrmKorisnik(null, true, FrmMode.EDIT);
                    frmIzmenaKorisnika.setVisible(true);
                    
                    btnPretragaActionPerformed(evt);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Morate izabrati korisnika!", "Biranje korisnika", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da učita podatke o korisniku!", "Biranje korisnika", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int rowIndex = tblPretraga.getSelectedRow();
        Session.getInstance().setCurrentUseCase(UseCase.UC_DELETE_USER);
        if(rowIndex != 1){
            if(Session.getInstance().getKorisnik().getAdminRole() == UlogaKorisnika.ADMIN){
                try {
                    TableModelKorisnik tmk = (TableModelKorisnik) tblPretraga.getModel();
                    Korisnik korisnik = tmk.get(rowIndex);
                    Controller.getInstance().deleteKorisnik(korisnik);
                    tmk.remove(rowIndex);
                    JOptionPane.showMessageDialog(this, "Uspešno obrisan korisnik!", "Brisanje korisnika", JOptionPane.INFORMATION_MESSAGE);
                    
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Sistem ne može da obriše korisnika", "Brisanje korisnika", JOptionPane.ERROR_MESSAGE);
                    System.err.println(ex.getMessage());
                }
            } else{
               JOptionPane.showMessageDialog(this, "Morati biti admin za brisanje korisnika", "Biranje korisnika", JOptionPane.ERROR_MESSAGE); 
            }
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati korisnika!", "Biranje korisnika", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPregledKorisnika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPregledKorisnika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPregledKorisnika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPregledKorisnika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmPregledKorisnika dialog = new FrmPregledKorisnika(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPretraga;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tblPretraga;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration//GEN-END:variables

    private void adjustForm() {
        try {
            centerForm();
            fixTable(Controller.getInstance().getAllUsers(""));
            setTitle("Pretraga korisnika");
            switch (Session.getInstance().getKorisnik().getAdminRole()){
                case UlogaKorisnika.ADMIN:
                    
                    btnObrisi.setVisible(true);
                    btnIzmeni.setVisible(true);
                    
                    break;
                
                case UlogaKorisnika.USER:
                    
                    btnObrisi.setVisible(false);
                    btnIzmeni.setVisible(false);
                    
                    break;
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmPregledKorisnika.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void centerForm() {
        setLocationRelativeTo(null);
    }

    private void fixTable(List<Korisnik> lista) {
        TableModelKorisnik tmk = new TableModelKorisnik(lista);
        tblPretraga.setModel(tmk);
    }
}
